{"ast":null,"code":"import{swap,insertStep}from'./helpers';var quickSort=function quickSort(array,position,arraySteps,colorSteps){if(array.length<2){insertStep(array,position,arraySteps);var _colorKey=colorSteps[colorSteps.length-1].slice();_colorKey[position]=2;colorSteps.push(_colorKey);return;}// pick median of three numbers as pivot and sent it to back\nswap(array,pickPivot(array),array.length-1);insertStep(array,position,arraySteps);colorSteps.push(colorSteps[colorSteps.length-1].slice());var pivot=array[array.length-1];var A=0;var B=array.length-1;// swap small value from right with big value from left\nwhile(A<B){while(array[A]<pivot){insertStep(array,position,arraySteps);var _colorKey2=colorSteps[colorSteps.length-1].slice();_colorKey2=_colorKey2.map(function(key){return key===2?2:0;});_colorKey2[position+A]=1;_colorKey2[position+B]=1;colorSteps.push(_colorKey2);A++;}while(array[B]>=pivot){insertStep(array,position,arraySteps);var _colorKey3=colorSteps[colorSteps.length-1].slice();_colorKey3=_colorKey3.map(function(key){return key===2?2:0;});_colorKey3[position+A]=1;_colorKey3[position+B]=1;colorSteps.push(_colorKey3);B--;}if(A<B){swap(array,A,B);insertStep(array,position,arraySteps);var _colorKey4=colorSteps[colorSteps.length-1].slice();_colorKey4=_colorKey4.map(function(key){return key===2?2:0;});_colorKey4[position+A]=1;_colorKey4[position+B]=1;colorSteps.push(_colorKey4);}}// swap big value with pivot\nvar bigIndex=Math.max(A,B);swap(array,bigIndex,array.length-1);insertStep(array,position,arraySteps);var colorKey=colorSteps[colorSteps.length-1].slice();colorKey[position+bigIndex]=2;colorSteps.push(colorKey);// recurse on two halves\nquickSort(array.slice(0,A),position,arraySteps,colorSteps);quickSort(array.slice(A+1),position+A+1,arraySteps,colorSteps);return;};function pickPivot(array){var A=array[0];var B=array[Math.floor(array.length/2)];var C=array[array.length-1];var middleValue=[A,B,C].sort()[1];var middleIndex=array.indexOf(middleValue);return middleIndex;}export default quickSort;","map":{"version":3,"names":["swap","insertStep","quickSort","array","position","arraySteps","colorSteps","length","colorKey","slice","push","pickPivot","pivot","A","B","map","key","bigIndex","Math","max","floor","C","middleValue","sort","middleIndex","indexOf"],"sources":["/home/prabhakar/projects/Sorting-Visualizer-Complete/src/algorithms/QuickSort.js"],"sourcesContent":["import { swap, insertStep } from './helpers';\n\nconst quickSort = (array, position, arraySteps, colorSteps) => {\n  if (array.length < 2) {\n    insertStep(array, position, arraySteps);\n\n    let colorKey = colorSteps[colorSteps.length - 1].slice();\n    colorKey[position] = 2;\n    colorSteps.push(colorKey);\n    return;\n  }\n\n  // pick median of three numbers as pivot and sent it to back\n  swap(array, pickPivot(array), array.length - 1);\n  insertStep(array, position, arraySteps);\n  colorSteps.push(colorSteps[colorSteps.length - 1].slice());\n\n  let pivot = array[array.length - 1];\n  let A = 0;\n  let B = array.length - 1;\n\n  // swap small value from right with big value from left\n  while (A < B) {\n    while (array[A] < pivot) {\n      insertStep(array, position, arraySteps);\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\n      colorKey[position + A] = 1;\n      colorKey[position + B] = 1;\n      colorSteps.push(colorKey);\n      A++;\n    }\n    while (array[B] >= pivot) {\n      insertStep(array, position, arraySteps);\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\n      colorKey[position + A] = 1;\n      colorKey[position + B] = 1;\n      colorSteps.push(colorKey);\n      B--;\n    }\n    if (A < B) {\n      swap(array, A, B);\n      insertStep(array, position, arraySteps);\n      let colorKey = colorSteps[colorSteps.length - 1].slice();\n      colorKey = colorKey.map(key => key === 2 ? 2 : 0);\n      colorKey[position + A] = 1;\n      colorKey[position + B] = 1;\n      colorSteps.push(colorKey);\n    }\n  }\n\n  // swap big value with pivot\n  let bigIndex = Math.max(A, B);\n\n  swap(array, bigIndex, array.length - 1);\n  insertStep(array, position, arraySteps);\n  let colorKey = colorSteps[colorSteps.length - 1].slice();\n  colorKey[position + bigIndex] = 2;\n  colorSteps.push(colorKey);\n\n  // recurse on two halves\n  quickSort(array.slice(0, A), position, arraySteps, colorSteps);\n  quickSort(array.slice(A + 1), position + A + 1, arraySteps, colorSteps);\n\n  return;\n}\n\nfunction pickPivot(array) {\n  let A = array[0];\n  let B = array[Math.floor(array.length / 2)];\n  let C = array[array.length - 1];\n\n  let middleValue = [A, B, C].sort()[1];\n  let middleIndex = array.indexOf(middleValue);\n\n  return middleIndex;\n}\n\nexport default quickSort;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}